<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>初部署hexo</title>
    <link href="/2022/04/10/%E5%88%9D%E9%83%A8%E7%BD%B2hexo/"/>
    <url>/2022/04/10/%E5%88%9D%E9%83%A8%E7%BD%B2hexo/</url>
    
    <content type="html"><![CDATA[<h4 id="nodejs安装"><a href="#nodejs安装" class="headerlink" title="nodejs安装"></a>nodejs安装</h4><hr><p>1.双击安装包<br><img src="https://img-blog.csdnimg.cn/39d50bce452240b69301433b37d4d4ab.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>2.Next<br><img src="https://img-blog.csdnimg.cn/223f54e653b440baa1fb91f82a048dc5.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>3.修改安装目录为</p><figure class="highlight avrasm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">D:</span>\Develop\nodejs\<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/8889b50a8a0f4330a21b35cb89b30f05.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>4.Next<br><img src="https://img-blog.csdnimg.cn/a140f6cadda94af298764b0a8487d527.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>5.Next<br><img src="https://img-blog.csdnimg.cn/ef780dfbff2f4802b7073bba1dd4d9e7.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>6.Install<br><img src="https://img-blog.csdnimg.cn/67c9410fa5ae4fc5ada6348a029ffeb5.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>7.Finish<br><img src="https://img-blog.csdnimg.cn/17c26fd6f32b42fa9acff19dcafb6a04.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>8.打开命令提示符cmd<br><img src="https://img-blog.csdnimg.cn/1b321620158f4bd18d2101a03def5183.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_19,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>9.分别输入以下指令检测是否安装成功</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm -v<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/5bf895b4bc744fe1a762150eddd0e48f.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>10.进入安装目录<br><img src="https://img-blog.csdnimg.cn/35791d03814f4f8390f6ac8a46029014.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>11.在nodejs文件夹内创建两个以下名称的文件夹</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">node<span class="hljs-emphasis">_global</span><br><span class="hljs-emphasis">node_</span>cache<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/88192ebf42304fdba9f5aab10335dba7.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>12.创建完成后打开cmd指令分别输入以下两条指令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span><span class="hljs-built_in"> prefix </span><span class="hljs-string">&quot;D:\Develop\nodejs\node_global&quot;</span><br>npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;D:\Develop\nodejs\node_cache&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e7e4c3596ac04568aa7f84b75a9479f3.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>13.配置环境变量，“我的电脑➡右键➡属性➡高级系统设置➡高级➡环境变量”<br><img src="https://img-blog.csdnimg.cn/1c462918977c4287a5c1ee1b46d1c048.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>14.用户变量下的path修改为</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">D:\Develop<span class="hljs-symbol">\n</span>odejs<span class="hljs-symbol">\n</span>ode_global<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/874dfa7d0d544403a8cdcaa0300340ec.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/adaffab3a39a4ecc96dba424d2840275.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/85dbe7cd88004ddfa0e697659c373de3.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>15.新建一个系统变量名称为</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">NODE_PATH</span><br></code></pre></td></tr></table></figure><p>变量值为</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">D:\Develop<span class="hljs-symbol">\n</span>odejs<span class="hljs-symbol">\n</span>ode_global<span class="hljs-symbol">\n</span>ode_modules<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f9ae3923d56a41769da1f6794cb30c13.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h4 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h4><hr><p>1.打开安装包，next<br>2.选择安装目录(目录在哪无所谓，我强迫症，新建太多文件夹难受，所以就都放在Develop文件夹)<br><img src="https://img-blog.csdnimg.cn/7ff8906ec52f457a9bdc1a4f9039c633.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_18,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>3.Next直到结束<br>4.Finish安装完成</p><h4 id="通过ssh-keys绑定GitHub"><a href="#通过ssh-keys绑定GitHub" class="headerlink" title="通过ssh keys绑定GitHub"></a>通过ssh keys绑定GitHub</h4><p>1.注册GitHub<br>提示填啥就填啥，注册个账户<br>2.登录进去以后，点击new，新建一个仓库<br><img src="https://img-blog.csdnimg.cn/218f44e290b94053a941a49a61e22efa.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>存储库名称格式必须为</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-string">&quot;username&quot;</span><span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span>   <span class="hljs-selector-attr">[<span class="hljs-string">&quot;username&quot;</span>是自己的用户名]</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/60307e6e9472456eaf929b0e738fa917.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>3.打开cmd，执行以下指令生成ssh key</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">ssh-keygen -t rsa -C <span class="hljs-string">&quot;username@email.com&quot;</span>   [<span class="hljs-string">&quot;username@email.com&quot;</span>是github绑定的邮箱]<br></code></pre></td></tr></table></figure><p>回车直到生成<br>密钥生成的目录为</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">C:</span>\Users\<span class="hljs-string">&quot;username&quot;</span>\.ssh<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/6b41528d70964d19af87bc8d8d973129.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>4.通过记事本或者编辑器打开<br>摁下[ctrl + a]全选，复制<br>打开GitHub并登录，点击头像➡Settings➡SSH and GPG keys➡New SSH key<br><img src="https://img-blog.csdnimg.cn/04b0ce4f744948ca944f528214942745.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>5.绑定ssh keys</p><blockquote><p>title随便写<br>Key将刚才复制的密钥粘贴进去<br>点击Add SSH Key</p></blockquote><p>6.在命令提示符cmd中原封不动输入以下指令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>若回复为Hi “你的GitHub用户名”则为绑定成功<br><img src="https://img-blog.csdnimg.cn/6f414fe96b9c455cb553ee1bf9f9641a.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>7.配置git，在cmd下输入以下命令</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;username&quot;</span>   <span class="hljs-selector-attr">[<span class="hljs-string">&quot;username&quot;</span>是自己的用户名]</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;username@email.com&quot;</span>   <span class="hljs-selector-attr">[<span class="hljs-string">&quot;username@email.com&quot;</span>是github绑定的邮箱]</span><br></code></pre></td></tr></table></figure><h4 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h4><p>1.以管理员身份打开cmd，执行hexo全局安装指令</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install hexo-<span class="hljs-keyword">cli</span> -g<br></code></pre></td></tr></table></figure><p>2.输入以下指令检测hexo是否安装成功</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></td></tr></table></figure><p>3.在D盘新建一个[blog]文件夹,并进入<br>4.在blog文件夹下，右键➡Git Bash Here,进入命令行工具<br><img src="https://img-blog.csdnimg.cn/485c41f04a8141ee9d906b0b29885fe2.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br>5.输入初始化命令</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a5e9fc0b5e0c48ca92037050acbbc693.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><blockquote><p>这里非常容易报错，只要之前步骤没有任何改动，那么这里报错百分之九十是网络问题。<br>解决方案1：清除缓存，多试几次<br>解决方案2：用”科学”或者”魔法”</p></blockquote><p>6.以下为初始化成功提示<br><img src="https://img-blog.csdnimg.cn/a4eae2a650e849d893b84286258f24d1.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>7.打开blog文件夹下的”_config.yml”hexo配置文件，拉到最底部</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@github.com:<span class="hljs-number">0</span>god23/<span class="hljs-number">0</span>god23.github.io.git<br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><blockquote><p>“: “后边均有一个空格，请不要删除</p></blockquote><blockquote><p>repo: 请修改为自己创建的GitHub仓库的ssh url克隆链接<br>如图<br><img src="https://img-blog.csdnimg.cn/208e55315749408d921aededfc98daee.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></blockquote><p>8.执行[hexo g]生成本地静态文件<br><img src="https://img-blog.csdnimg.cn/0f26a3ef4a904d4d9dabe24a31a01244.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>9.执行以下命令安装 hexo-deplayer-git 依赖</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>10.执行[hexo d]部署到GitHub仓库，这里会有一个弹窗提示登陆github账号，登录即可<br><img src="https://img-blog.csdnimg.cn/1e0656cb732d488a82e50bdbaf5a6ccb.webp?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAMGdvZC5tZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>11.稍等几分钟即可部署生效<br>访如下网址</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">username<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span>   <span class="hljs-selector-attr">[<span class="hljs-string">&quot;username&quot;</span>是自己的用户名]</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>暴力破解</title>
    <link href="/2022/01/10/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <url>/2022/01/10/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h1><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h3 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h3><h3 id="社工库"><a href="#社工库" class="headerlink" title="社工库"></a>社工库</h3><h3 id="指定生成的密码"><a href="#指定生成的密码" class="headerlink" title="指定生成的密码"></a>指定生成的密码</h3><p>指定的意识</p><h2 id="漏洞详解"><a href="#漏洞详解" class="headerlink" title="漏洞详解"></a>漏洞详解</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>“<strong>暴力破解</strong>”是一攻击具手段，在web攻击中，一般会使用这种手段对应用系统的认证信息进行获取。 其过程就是使用大量的认证信息在认证接口进行尝试登录，直到得到正确的结果。 为了提高效率，暴力破解一般会使用带有字典的工具来进行自动化操作。</p><p>理论上来说，大多数系统都是可以被暴力破解的，只要攻击者有足够强大的计算能力和时间，所以断定一个系统是否存在暴力破解漏洞，其条件也不是绝对的。 我们说一个web应用系统存在暴力破解漏洞，一般是指该web应用系统没有采用或者采用了比较弱的认证安全策略，导致其被暴力破解的“可能性”变的比较高。 这里的认证安全策略, 包括：</p><p>1.是否要求用户设置复杂的密码；<br>2.是否每次认证都使用安全的验证码（想想你买火车票时输的验证码～）或者手机otp；<br>3.是否对尝试登录的行为进行判断和限制（如：连续5次错误登录，进行账号锁定或IP地址锁定等）；<br>4.是否采用了双因素认证；<br>…等等。<br>千万不要小看暴力破解漏洞,往往这种简单粗暴的攻击方式带来的效果是超出预期的!</p><p>你可以通过“BurteForce”对应的测试栏目，来进一步的了解该漏洞。</p><p>注册的时候是否要求用户设置复杂的密码</p><p>是否每次认证都使用安全的验证码</p><p>是否对尝试登录行为进行判断和限制</p><p>是否在必要的情况下采用了双因素验证。。。。</p><p>存在暴力破解漏洞的王网站可能会遭受暴力破解攻击，但该暴力破解攻击<strong>成功</strong>的可能性并不是100%，所以有些网站即虽然存在暴力破解漏洞，但其管理员可能会忽略它的危害。</p><p>暴力破解属于猜测行为。</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><h4 id="1-确认登录接口的脆弱性"><a href="#1-确认登录接口的脆弱性" class="headerlink" title="1.确认登录接口的脆弱性"></a>1.确认登录接口的脆弱性</h4><p>确定目标是否存在暴力破解的漏洞。（确认被暴力破解的“可能性”）</p><p>比如：尝试登录的抓包—观察验证元素和response信息，判断是否存在被暴力破解的可能性。</p><h4 id="2-对字典进行优化"><a href="#2-对字典进行优化" class="headerlink" title="2.对字典进行优化"></a>2.对字典进行优化</h4><p>根据实际的情况对字典进行优化，提高爆破过程中的效率。</p><h4 id="3-工具自动化操作"><a href="#3-工具自动化操作" class="headerlink" title="3.工具自动化操作"></a>3.工具自动化操作</h4><p>配置自动化工具（线程，超时时间，重试次数等）进行自动化操作。</p><h3 id="技巧–字典优化技巧"><a href="#技巧–字典优化技巧" class="headerlink" title="技巧–字典优化技巧"></a>技巧–字典优化技巧</h3><h4 id="技巧1"><a href="#技巧1" class="headerlink" title="技巧1."></a>技巧1.</h4><p>根据注册提示信息进行优化，对目标站点进行注册，搞清楚账号密码的一些限制，比如目标站点要求密码必须是6位以上，字母数字组合，则可以按照此优化字典，比如去掉不符合要求的密码。</p><h4 id="技巧2"><a href="#技巧2" class="headerlink" title="技巧2."></a>技巧2.</h4><p>如果破解的是管理后台，往往这种系统的管理员是admin&#x2F;administratoa&#x2F;root的纪律比较高，可以使用者三个账号+随便一个密码，尝试登录，观看返回的结果，确定用户名。比如：输入XXX&#x2F;YYY返回“用户名或密码错误” 、输入admin&#x2F;yyyy返回“密码错误”，则基本可以确定用户名是admin； 因此可以至对密码进行爆破即可，提高效率。</p><h2 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h2><p>实验环境：phpstudy+PHP 5.5.38+Nginx1.15+mysql5.7.27</p><p>实验目标：pikachu靶场-暴力破解</p><p>测试工具：Burpsuite + Chrome</p><h3 id="实验1—基于表单的暴力破解"><a href="#实验1—基于表单的暴力破解" class="headerlink" title="实验1—基于表单的暴力破解"></a>实验1—基于表单的暴力破解</h3><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315112958271.png" alt="image-20220315112958271"></p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315113028355.png" alt="image-20220315113028355"></p><p>测试：</p><p>进行对表单进行测试：admin&#x2F;admin,抓包查看请求包</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315113332185.png" alt="image-20220315113332185"></p><p>将发送的post请求包至Intruder(专门用于多线程尝试的工具)</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315171135345.png" alt="image-20220315171135345"></p><p>转到Positions下，对你需要的多次提交的参数进行加$$(右边的add)完成后加入你的payload，如果你不知道怎么构造密码。点击页面上的提示，告诉你这个有哪些用户。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315114159489.png" alt="image-20220315114159489"></p><p>需要修改的:</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315114311858.png" alt="image-20220315114311858"></p><p>user的payload</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315171224071.png" alt="image-20220315171224071"></p><p>password的payload</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315171322956.png" alt="image-20220315171322956"></p><p>start attcak，开始攻击。</p><p>攻击完成后，查看你的结果的response的数据包长度，进行排序。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315171606228.png" alt="image-20220315171606228"></p><p>三个账号密码都已经碰撞出来，分别是：admin&#x2F;123456 ，pikachu&#x2F;000000 ，test&#x2F;abc123</p><p>尝试登录，登录成功。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220315171756850.png" alt="image-20220315171756850"></p><p>完成。</p><h3 id="实验2–验证码绕过（on-server"><a href="#实验2–验证码绕过（on-server" class="headerlink" title="实验2–验证码绕过（on server)"></a>实验2–验证码绕过（on server)</h3><p>![image-20220315172248815](&#x2F;C:&#x2F;Users&#x2F;William Tao&#x2F;AppData&#x2F;Roaming&#x2F;Typora&#x2F;typora-user-images..&#x2F;暴力破解&#x2F;image-20220315172248815.png)</p><p>此处的密码依然还是实验1的三个账号密码，但是是需要验证码登录，此漏洞出现的原因是在服务端的生成验证码的在服务器的缓存时间比较长导致的，一般是5分钟，15分钟（多数）。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164225467.png" alt="image-20220316164225467"></p><p>登录进行抓包</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164308513.png" alt="image-20220316164308513"></p><p>发送到Intruder</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164418274.png" alt="image-20220316164418274"></p><p>把username和password加入到payload，使用ClusterBomb，进行爆破。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164551545.png" alt="image-20220316164551545"></p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164608913.png" alt="image-20220316164608913"></p><p>将payload的设置好后进行攻击。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164721973.png" alt="image-20220316164721973"></p><p>攻击完成后，对长度进行排序，最上面的几个就是账号密码获取成功。</p><h3 id="实验3–验证码绕过（on-client"><a href="#实验3–验证码绕过（on-client" class="headerlink" title="实验3–验证码绕过（on client)"></a>实验3–验证码绕过（on client)</h3><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316165027446.png" alt="image-20220316165027446"></p><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><p>我们点击提示，发现叫我们查看前端代码，查看一下。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316165050973.png" alt="image-20220316165050973"></p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316165203810.png" alt="image-20220316165203810"></p><p>发现验证码是通过createCode（）的函数进行控制的。我们看一下js代码。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316165354510.png" alt="image-20220316165354510"></p><p>正如提示所说，验证码是由前端代码控制的。所以我们只需加载页面的时候去掉js加载。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316170751968.png" alt="image-20220316170751968"></p><p>刷新网页，进行抓包。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316171217544.png" alt="image-20220316171217544"></p><p>将抓到的包发送到Intruder，加入需要碰撞的参数。</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316171502911.png" alt="image-20220316171502911"></p><p>设置payload进行爆破</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164551545.png" alt="image-20220316164551545"></p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164608913.png" alt="image-20220316164608913"></p><p>开始攻击</p><p><img src="/../%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/image-20220316164721973.png" alt="image-20220316164721973"></p><p>进行长度排序，成功的账号密码爆破成功。</p><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>由于验证码只在前端控制，我们可以直接不填写验证码，直接进行爆破。也是最简单的方法，和实验1一样。由于此处的验证码不起作用。直接爆破。最终也一样可以爆破成功。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
